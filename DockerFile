Problem 1........



# Use an official Python runtime as a parent image
FROM python:3.8-slim

# Set the working directory in the container
WORKDIR /app

# Clone the WiseCow repository from GitHub
RUN apt-get update && \
    apt-get install -y git && \
    git clone https://github.com/nyrahul/wisecow.git .

# Install dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Expose the port number the app runs on
EXPOSE 4499

# Define environment variables
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0

# Run the application
CMD ["flask", "run"]

#for creating image 
docker build -t wisecow-app .

#to run a container
docker run -p 4499:4499 wisecow-app


Deployment.....kubernetes manifests

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wisecow-deployment
spec:
  replicas: 3  # Adjust based on your scaling requirements
  selector:
    matchLabels:
      app: wisecow
  template:
    metadata:
      labels:
        app: wisecow
    spec:
      containers:
        - name: wisecow
          image: your-registry-url/wisecow:latest  # Update with your Docker image details
          ports:
            - containerPort: 8080  # Adjust based on your application's port
          # Add environment variables or volume mounts if necessary

name: Deploy Wisecow to Kubernetes

on:
  push:
    branches:
      - main  # Change to your main branch name

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub (or your registry)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t your-registry-url/wisecow:${{ github.sha }} .
          docker push your-registry-url/wisecow:${{ github.sha }}

      - name: Update Kubernetes deployment
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          namespace: default
          manifest-file-path: |
            wisecow-deployment.yaml
            wisecow-service.yaml
            # Add wisecow-ingress.yaml if using Ingress

      # Optional step for Ingress setup
      - name: Apply TLS secret
        run: |
          kubectl create secret tls tls-secret --cert=fullchain.pem --key=privkey.pem -n default
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}




